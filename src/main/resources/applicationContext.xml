<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">


<!-- 1.基于注解的自动扫描 -->
<context:component-scan base-package="com.oracle.*" >
<!-- spring管理的sevice和Respository -->
<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"></context:exclude-filter>
<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:exclude-filter>
</context:component-scan>

<!-- 2.引入jdbc文件 -->
<context:property-placeholder location="classpath:jdbc.properties"/>
	<!-- 3.配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	<property name="user" value="${jdbc.user}"></property>
	<property name="password" value="${jdbc.password}"></property>
	<property name="jdbcUrl" value="${jdbc.url}"></property>
	<property name="driverClass" value="${jdbc.driver}"></property>
	</bean>


<!-- 4. 配置Sqlsessionfactory-->

<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">

<!-- 注入数据源 -->
<property name="dataSource" ref="dataSource"></property>

<!-- 引入mybatis配置文件 -->

<property name="configLocation" value="classpath:Mybatis-config.xml"></property>

<!-- 配置别名处理器 -->

<property name="typeAliasesPackage" value="com.oracle.web.bean"></property>

<!-- 引入pagehelper插件 -->

 <property name="plugins">
    <array>
      <bean class="com.github.pagehelper.PageInterceptor">
        <property name="properties">
          <!--使用下面的方式配置参数，一行配置一个 -->
          <value>
            reasonable=true
          </value>
        </property>
      </bean>
    </array>
  </property>
</bean>

<!-- 5.配置事务管理器 spring提供的事务管理器 -->
<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">

<property name="dataSource" ref="dataSource"></property>
</bean>

<!-- 6.开启基于注解的事务控制 -->

<tx:annotation-driven transaction-manager="transactionManager"/>

<!-- 7.提供bean来接管所有的mapper-->

<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
<property name="basePackage" value="com.oracle.web.mapper"></property>


</bean>
</beans>
